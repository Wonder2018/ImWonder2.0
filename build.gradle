plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'war'
}

group = 'top.imwonder'
version = '2.0.0'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
    maven { url 'https://maven.aliyun.com/repository/central'}
    maven { url 'https://maven.aliyun.com/repository/jcenter'}
    maven { url 'https://maven.aliyun.com/repository/public'}
    maven { url 'https://maven.aliyun.com/repository/google'}
    maven { url 'https://maven.aliyun.com/repository/gradle-plugin'}
    maven { url 'https://maven.aliyun.com/repository/spring'}
    maven { url 'https://maven.aliyun.com/repository/spring-plugin'}
    maven { url 'https://maven.aliyun.com/repository/grails-core'}
    maven { url 'https://maven.aliyun.com/repository/apache-snapshots'}
    mavenLocal()
	mavenCentral()
}

dependencies {
	implementation (
		'org.springframework.boot:spring-boot-starter-thymeleaf',
		'org.springframework.boot:spring-boot-starter-web',
		'org.springframework.boot:spring-boot-starter-jdbc'
	)
    implementation('com.google.code.gson:gson:2.8.6')
    implementation('dom4j:dom4j:1.6.1')
    implementation('com.github.theborakompanioni:thymeleaf-extras-shiro:2.0.0')
    implementation('org.apache.commons:commons-lang3:3.10')
	implementation('org.jsoup:jsoup:1.13.1')
	implementation(
        'org.apache.shiro:shiro-core:1.5.1',
		'org.apache.shiro:shiro-ehcache:1.5.1',
		'org.apache.shiro:shiro-web:1.5.1',
		'org.apache.shiro:shiro-quartz:1.5.1',
		'org.apache.shiro:shiro-spring:1.5.1'
    )
    implementation('com.qiniu:qiniu-java-sdk:7.2.29')
	compile fileTree(dir:'lib',include:['*.jar'])
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.junit.platform:junit-platform-testkit:1.6.2')
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}

task cacheToLocalMavenRepository(type: Copy) {
    from new File(gradle.gradleUserHomeDir, 'caches/modules-2/files-2.1')
    into repositories.mavenLocal().url
    eachFile {
        List<String> parts = it.path.split('/')
        it.path = (parts[0]+ '/' + parts[1]).replace('.','/') + '/' + parts[2] + '/' + parts[4]
    }
    includeEmptyDirs false
}